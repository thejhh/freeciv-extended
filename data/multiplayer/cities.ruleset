; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

[datafile]
description="Cities data for Freeciv"
options="+Freeciv-2.3-ruleset"

; /* <-- avoid gettext warnings
;
; A specialist is a city citizen who is not a tile worker.  Usually the
; player can control what specialist each citizen is, so long as the
; requirements for that specialist are met.
;
; Below are the entries for the specialists, one per specialist type.
; The tag name (in [specialist_*]) doesn't matter so long as it's unique.
; For each specialist the following fields may be set:
;
; 
; name          = translatable (plural) name as seen by user
; rule_name     = (optional) name for savegames, rulesets etc; if not
;                 present, 'name' is used. Since the name used in savegames
;                 must not change, this is used when renaming a specialist
;                 after a ruleset has been released. (The original specialist
;                 names in the default ruleset were not designed to be
;                 user-visible.)
; short_name    = one-character "short name" used (for instance) in cityrep;
;                 should be first character/abbrevation of "name"
; reqs		= requirements to have the specialist pick (see
;		  effects.ruleset and README.effects for help on requirements)
; helptext      = optional help text string; should escape all raw newlines
;                 so that xgettext parsing works
;
; */ <-- avoid gettext warnings

[specialist_elvis]
name            = _("Entertainers")
rule_name       = "elvis"
short_name	= _("?Elvis:E")
reqs		=
    { "type", "name", "range"
; Nothing
    }
helptext        = _("\
Each entertainer produces two luxury points for their city per turn. \
See the section on Happiness for the effects of luxury points.\
")

[specialist_scientist]
name            = _("Scientists")
rule_name       = "scientist"
short_name	= _("?Scientist:S")
reqs		=
    { "type", "name", "range"
; Nothing
    }
helptext        = _("\
Each scientist adds three points to your empire's research output \
per turn.\
")

[specialist_taxman]
name            = _("Taxmen")
rule_name       = "taxman"
short_name	= _("?Taxman:T")
reqs		=
    { "type", "name", "range"
; Nothing
    }
helptext        = _("\
Each tax collector produces three extra gold for your treasury \
per turn.\
")

[parameters]
add_to_size_limit  = 8		; cities >= this cannot be added to.
angry_citizens = 1              ; set to zero to disable angry citizens
celebrate_size_limit = 3        ; cities >= can celebrate

changable_tax = 1		; set to zero to disallow changing of tax rates
;forced_science = 0		; set these fields when changeable_tax is turned off
;forced_luxury = 100
;forced_gold = 0

vision_reveal_tiles = 1		; civ1 & 2 default zero

; /* <-- avoid gettext warnings
;
; City styles define the way cities are drawn
;
; name          = translatable name as seen by user
; rule_name     = (optional) name for savegames, rulesets etc; if not
;                 present, 'name' is used. Since the name used in savegames
;                 must not change, use this when renaming a city style after a
;                 ruleset has been released.
; graphic              = group of tiles to use, see cities spec for
;                        more info on city tiles
; oceanic_graphic      = group of tiles to use for oceanic cities. If this
;                        is omitted, same graphics as for land cities is used
; citizens_graphic     = group of citizens tiles to use, see citizens/small
;                        spec for more info on citizens tiles
; reqs        = requirements for this city style (see README.effects)
; replaced_by = which style replaced this one
;
; */ <-- avoid gettext warnings

[citystyle_european]
name        = _("?citystyle:European")
graphic     = "city.european"
graphic_alt = "-"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_classical]
name        = _("?citystyle:Classical")
graphic     = "city.classical"
graphic_alt = "-"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_tropical]
name        = _("?citystyle:Tropical")
graphic     = "city.tropical"
graphic_alt = "city.european"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_asian]
name        = _("?citystyle:Asian")
graphic     = "city.asian"
graphic_alt = "city.classical"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_babylonian]
name        = _("?citystyle:Babylonian")
graphic     = "city.babylonian"
graphic_alt = "city.classical"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_celtic]
name        = _("?citystyle:Celtic")
graphic     = "city.celtic"
graphic_alt = "city.european"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
; No reqs
replaced_by = "Industrial"

[citystyle_industrial]
name        = _("?citystyle:Industrial")
graphic     = "city.industrial"
graphic_alt = "-"
citizens_graphic     = "industrial"
citizens_graphic_alt = "generic"
reqs = { "type", "name", "range"
         "tech", "Railroad", "Player"
       }
replaced_by = "ElectricAge"

[citystyle_electric]
name        = _("?citystyle:ElectricAge")
graphic     = "city.electricage"
graphic_alt = "city.modern"
citizens_graphic     = "electricage"
citizens_graphic_alt = "generic"
reqs = { "type", "name", "range"
         "tech", "Automobile", "Player"
       }
replaced_by = "Modern"

[citystyle_modern]
name        = _("?citystyle:Modern")
graphic     = "city.modern"
graphic_alt = "-"
citizens_graphic     = "modern"
citizens_graphic_alt = "generic"
reqs = { "type", "name", "range"
         "tech", "Rocketry", "Player"
       }
replaced_by = "PostModern"

[citystyle_postmodern]
name        = _("?citystyle:PostModern")
graphic     = "city.postmodern"
graphic_alt = "-"
citizens_graphic     = "postmodern"
citizens_graphic_alt = "generic"
reqs = { "type", "name", "range"
         "tech", "Superconductors", "Player"
       }
replaced_by = "-"
